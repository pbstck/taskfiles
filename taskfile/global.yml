version: '3'
tasks:
  test:
    cmds:
      - for: { var: ALL_PROJECTS }
        task: '{{.ITEM}}:test'

  build:
    cmds:
      - for: { var: ALL_PROJECTS }
        task: '{{.ITEM}}:build'

  lint/check:
    cmds:
      - for: { var: ALL_PROJECTS }
        task: '{{.ITEM}}:lint/check'
      - task: infra:lint/check

  lint/format:
    cmds:
      - for: { var: ALL_PROJECTS }
        task: '{{.ITEM}}:lint/format'
      - task: infra:lint/format

  tag/beta:
    cmds:
      - task: tag
        vars: { STAGE: beta }

  tag/prod:
    cmds:
      - task: tag
        vars: { STAGE: prod }

  plan:
    internal: true
    deps: [ artifacts/retrieve ]
    cmd:
      task: infra:terraform/plan
      vars: { STAGE: '{{.STAGE}}' }

  plan/dev:
    cmd:
      task: plan
      vars: { STAGE: dev }

  plan/beta:
    cmd:
      task: plan
      vars: { STAGE: beta }
  plan/prod:
    cmd:
      task: plan
      vars: { STAGE: prod }

  deploy:
    deps: [ artifacts/retrieve ]
    cmd:
      task: infra:terraform/apply
      vars: { STAGE: '{{.STAGE}}' }

  deploy/dev:
    cmd:
      task: deploy
      vars: { STAGE: dev }
  deploy/beta:
    cmd:
      task: deploy
      vars: { STAGE: beta }
  deploy/prod:
    cmd:
      task: deploy
      vars: { STAGE: prod }

  artifacts/deliver:
    cmds:
      - for: { var: ALL_PROJECTS }
        task: '{{.ITEM}}:artifact/deliver'

  artifacts/retrieve:
    cmds:
      - for: { var: ALL_PROJECTS }
        task: '{{.ITEM}}:artifact/retrieve'

  artifacts/mock:
    cmds:
      - for: { var: ALL_PROJECTS }
        task: '{{.ITEM}}:artifact/mock'


  next_upgrade:
    internal: true
    cmd: cat ./next_upgrade.md

  tag:
    internal: true
    requires:
      vars: [ STAGE ]
    vars:
      LIB: '{{.LIB | default false}}' # Set to true if you want to tag a library (tag format will be v1.yyyymmdd.hhmm)
      TAG:
        sh: '{{if eq .LIB "false"}} TZ=ETC/UTC date +%Y-%m-%dT%H-%M-%SZ-{{.STAGE}} {{else}} echo "v1".`TZ=ETC/UTC date +%Y%m%d`.`TZ=ETC/UTC date +%-H%M` {{end}}'
    cmds:
      - task: next_upgrade
      - task: _tag
        vars: { STAGE: "{{.STAGE}}", TAG: "{{.TAG}}" }

  _tag:
    internal: true
    vars:
      hasXsel:
        sh: 'command -v xsel || true'
      hasPbcopy:
        sh: 'command -v pbcopy || true'
    prompt: 'Did you read the next_upgrade ?'
    requires:
      vars: [ STAGE, TAG ]
    cmds:
      - git tag {{.TAG}}
      - '{{if .hasPbcopy}}echo "git push origin {{.TAG}}" | pbcopy{{end}}'
      - '{{if .hasXsel}}echo "git push origin {{.TAG}}" | xsel --clipboard{{end}}'
      - echo "DONT FORGET TO 'git push origin {{.TAG}}'"