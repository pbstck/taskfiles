version: '3'

internal: true

vars:
  DEFAULT_RUST_WORKSPACE_DIR: '{{.ROOT_DIR}}/code/rust'
  RUST_WORKSPACE_DIR: '{{.RUST_WORKSPACE_DIR | default .DEFAULT_RUST_WORKSPACE_DIR}}'
  TEST_OUTPUT_DIR: '{{.TEST_OUTPUT_DIR | default "." }}'


includes:
  common:
    taskfile: common.yml
    internal: true

tasks:
  build:
    deps: [ common:ecr-login, common:bin ]
    requires:
      vars: [ BINARIES_NAME, RUST_WORKSPACE_DIR ]
    cmds:
      - cargo build --target x86_64-unknown-linux-gnu --release --bin {{ .BINARIES_NAME | replace " " " --bin "}}
      - for: { var: BINARIES_NAME }
        cmd: cp {{.RUST_WORKSPACE_DIR}}/target/x86_64-unknown-linux-gnu/release/{{.ITEM}} ./bootstrap && zip -r {{.ROOT_DIR}}/bin/{{.ITEM}}.zip ./bootstrap

  test:
    cmds:
      - cargo test

  test/coverage:
    cmd: cargo tarpaulin --output-dir {{.TEST_OUTPUT_DIR}} --out Xml --lib  --skip-clean


  lint/check:
    preconditions:
      - sh: command -v cargo-shear
        msg: "Please install cargo-shear by running `cargo install cargo-shear`"
    cmds:
      - cargo fmt -- --check
      - cargo clippy -- -D warnings
      - cargo shear

  lint/format:
    preconditions:
      - sh: command -v cargo-shear
        msg: "Please install cargo-shear by running `cargo install cargo-shear`"
    cmds:
      - cargo fmt
      - cargo clippy -- -D warnings
      - cargo shear --fix


  artifact/mock:
    deps: [ common:bin ]
    cmds:
      - for: { var: BINARIES_NAME }
        cmd: touch {{.ROOT_DIR}}/bin/{{.ITEM}}.zip

  artifact/deliver:
    cmds:
      - for: { var: BINARIES_NAME }
        task: common:artifact/deliver
        vars: { BINARY_NAME: "{{.ITEM}}" }

  artifact/retrieve:
    cmds:
      - for: { var: BINARIES_NAME }
        task: common:artifact/retrieve
        vars: { BINARY_NAME: "{{.ITEM}}" }