version: '3'

internal: true

includes:
  common:
    taskfile: common.yml
    internal: true
tasks:
  build:
    deps: [ common:bin ]
    requires:
      vars: [ BINARIES_NAME ]
    cmds:
      - for: { var: BINARIES_NAME }
        task: build_one
        vars: { BINARY_NAME: "{{.KEY}}", PATH: "{{.ITEM}}" }

  build_one:
    internal: true
    deps: [ common:bin ]
    requires:
      vars: [ BINARY_NAME, PATH ]
    cmds:
      - GOOS=linux {{.BUILD_PREFIX}} {{if .ARM}} GOARCH=arm64 {{end}}  go build -ldflags="-s -w" -tags lambda.norpc -o bootstrap {{.PATH}}
      - zip -r9 {{.USER_WORKING_DIR}}/bin/{{.BINARY_NAME}}.zip ./bootstrap
      - rm ./bootstrap

  test:
    preconditions:
      - sh: command -v gotestsum
        msg: "gotestsum is not installed, please install it to run tests"
    vars:
        GOTESTSUM_FORMAT: '{{if .CI}}github-actions{{else}}testname{{end}}'
    cmds:
      - gotestsum -f '{{.GOTESTSUM_FORMAT}}' {{.CLI_ARGS}}

  test:coverage:
    cmds:
      - task: test
        vars:
          CLI_ARGS: './... -count=1 -coverpkg=./... -covermode=set -coverprofile cover.out'
      - go tool cover -func=cover.out | tail -n 1 > total-statements-coverage

  lint:check:
    cmds:
      - gofmt -l -s ./ && [ -z "$(gofmt -l -s ./)" ]

  lint:format:
    cmds:
      - gofmt -l -s -w ./

  artifact:mock:
    deps: [ common:bin ]
    cmds:
      - for: { var: BINARIES_NAME }
        cmd: touch {{.USER_WORKING_DIR}}/bin/{{.KEY}}.zip

  artifact:deliver:
    cmds:
      - for: { var: BINARIES_NAME }
        task: common:artifact:deliver
        vars: { BINARY_NAME: "{{.KEY}}" }

  artifact:retrieve:
    cmds:
      - for: { var: BINARIES_NAME }
        task: common:artifact:retrieve
        vars: { BINARY_NAME: "{{.KEY}}" }
